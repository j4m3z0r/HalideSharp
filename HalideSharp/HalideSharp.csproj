<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{D84E250C-9E9C-4854-A2BF-9D1F9D045499}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>HalideSharp</RootNamespace>
    <AssemblyName>HalideSharp</AssemblyName>
    <TargetFrameworkVersion>v4.7.1</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <PlatformTarget>AnyCPU</PlatformTarget>
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Source\Constants.cs" />
    <Compile Include="Source\HS.cs" />
    <None Include="Source\HSBuffer.ecs" />
    <Compile Include="Source\HSBuffer.out.cs">
      <DependentUpon>Source\HSBuffer.ecs</DependentUpon>
    </Compile>
    <None Include="Source\HSExpr.ecs" />
    <Compile Include="Source\HSExpr.out.cs">
      <DependentUpon>Source\HSExpr.ecs</DependentUpon>
    </Compile>
    <None Include="Source\HSFunc.ecs" />
    <Compile Include="Source\HSExpr.shortcircuit.cs" />
    <Compile Include="Source\HSFunc.out.cs">
      <DependentUpon>Source\HSFunc.ecs</DependentUpon>
    </Compile>
    <Compile Include="Source\HSMath.cs" />
    <None Include="Source\HSVar.ecs" />
    <Compile Include="Source\HSObject.cs" />
    <Compile Include="Source\HSUtil.cs" />
    <Compile Include="Source\HSVar.out.cs">
      <DependentUpon>Source\HSVar.ecs</DependentUpon>
    </Compile>
    <Compile Include="Source\HSVar.shortcircuit.cs" />
    <Compile Include="Source\SharedEnums.cs" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="Development.md" />
    <Content Include="Source\hs.cpp" />
    <Content Include="Source\hsbuffer.cpp" />
    <Content Include="Source\hsexpr.cpp" />
    <Content Include="Source\hsfunc.cpp" />
    <Content Include="Source\hsmath.cpp" />
    <Content Include="Source\hsoperators.cpp" />
    <Content Include="Source\hsvar.cpp" />
    <Content Include="Source\MagicMacros.ecs" />
    <Content Include="Source\magicmacros.h" />
    <Content Include="Source\OperatorMacros.ecs" />
  </ItemGroup>
  <ItemGroup>
    <ContentWithTargetPath Include="$(ProjectDir)/Source/libhalide-wrapper.so">
      <Visible>false</Visible>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>libhalide-wrapper.so</TargetPath>
    </ContentWithTargetPath>
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
         Other similar extension points exist, see Microsoft.Common.targets.
    <Target Name="BeforeBuild">
    </Target>
    <Target Name="AfterBuild">
    </Target>
    -->
  <!-- Compile the bridging library for native -->
  <Target Name="BeforeBuild">
    <Exec Command="make -C $(ProjectDir)/Source -j 8" />
  </Target>
  <!-- Clean the bridging library when we clean the C# project -->
  <Target Name="BeforeClean">
    <Exec Command="make -C $(ProjectDir)/Source clean" />
  </Target>
</Project>