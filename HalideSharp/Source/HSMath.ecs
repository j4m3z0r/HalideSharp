using System;
using System.Runtime.InteropServices;

namespace HalideSharp
{
    public class HSMath
    {
        replace(SingleArgMathFunctions => (Sin, Asin, Cos, Acos, Tan, Atan, Sinh, Asinh, Cosh, Acosh, Tanh, Atanh, Sqrt, Exp, Log, Erf, FastInverse, FastInverseSqrt, Floor, Ceil, Round, Trunc, IsNan, Fract, Abs));

        unroll(MathFn in SingleArgMathFunctions) {
            replace(MethodName => concatId(Global_, MathFn, _Expr)) {
                [DllImport(Constants.LibName)]
                private static extern IntPtr MethodName(IntPtr arg);
                public static HSExpr MathFn(HSExpr arg) {
                    var result = new HSExpr(MethodName(HSUtil.CArg(arg)));
                    result.AddRef(arg);
                    return result;
                }
            }
        }

        replace(DualArgMathFunctions => (Atan2, Hypot, Pow, FastPow, Min, Max, AbsD));
        unroll(MathFn in DualArgMathFunctions) {
            replace(CName => concatId(Global_, MathFn, _ExprExpr)) {
                [DllImport(Constants.LibName)] private static extern IntPtr CName(IntPtr a, IntPtr b);
                public static HSExpr MathFn(HSExpr a, HSExpr b) {
                    var result = new HSExpr(CName(HSUtil.CArg(a), HSUtil.CArg(b)));
                    result.AddRef(a, b);
                    return result;
                }
            }
        }
    }
}
